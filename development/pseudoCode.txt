for each todo, check if todo.deadline is today
    place them in todoTodayArray
else   
    place them in todoLaterArray

if todoTodayArray is bigger than todoLaterArray
    place the rest in the second row
else

//first do the left column arrays
topAmount = leftColumnArray.length/2, do math.round

for topAmount of times,
    block1Array.push(shift entry from leftColumnArray)
    leftColumnArrayRestEntries = leftColumnArray

    block3Array = leftColumnArrayRestEntries

//then do the right column arrays

for every index value, remove that value from the arrays


first get each of the index values in a row

make function disableActionButtonsExcept()

make function changeUIState


states:
- empty
create todo > creating todo

- creating todo
no buttons available
(createTodo) empty with confirmation message
(closeTodo) empty

-todo Selected
finish todo > -empty
edit todo > -edit todo
remove todo > -empty

--make buttons for moving todo's up and down
--add dates to known dates
--make dates red when they passed


---------------------------------------------
renderLogic
UI state management
todoOverviewOrdering.js

display.js functions:

renderLogic:
/fillInBlock> renderLogic
updateTodoOverview > todoController
                        >todoOverviewOrdering
                            exports an ordered object with
                                urgentImportant
                                urgentNotImportant
                                notUrgentImportant
                                notUrgentNotImportant
                        >UIStateManagement
disableActionButtonsExcept > UIStates
showTodoDetails > renderLogic
createInfoNode > renderLogic

remove trigger states